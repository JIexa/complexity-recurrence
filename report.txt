program               recurrence found        known recurrence        Complexity    Expected complexity
binary search         T(n/2) + 1              T(n/2) + 1              O(log n)      10.1*ln n + 1
bubble sort           T(n-1)                  T(n-1) + n              O(n^2)        10.5*n2 + 4.5
double_rec_call       T(n/6) + T(n/3)+1       T(n/6)+T(n/3) + 1       O(logn)       -
euler totient         T(n-1) + n              -                       O(n^2)        -
fibonacci             T(n-2) + T(n-1)         T(n-2)+T(n-1)           O(2^n)        3*n + 4                                %we have a naive recursive implementation without memoization
Hanoi                 2T(n-1)+ n^3            2*T(n-1)                O(2^n)        -
heap sort             T(n-0) + n              T(n-1) + log n          -             23.09*n*ln n + 35.09*n − 33.08         %fix trace collection
insertion sort        T(n-1) + n              T(n-1) + n              O(n^2)        2.5*n2 + 12.5*n
merge sort            2*T(n/2) + n            2*T(n/2) + n            O(n log n)    25.02*n*ln n + 21.68*n − 20.68
quick sort            T(n-1) + n              T(n-1) + n              O(n^2)        9.34*n2 + 8.67
selection sort        T(n-1) + n              T(n-1) + n              O(n^2)        -
karatsuba             2*T(n/2) + T(n-1) + n   3*T(n/2) + n            O(n^1.58)     2261.55 * n^1.6 + 1                    %fix
factorial             T(n-1) + 1              T(n−1) + 1              O(n)          5*n + 2
permutations          T(n-1) + 1              T(n-1) + 1              O(n)          10*n − 5*k + 8                          % I get O(n) which is correct since n>=k
bivariate             N/A                     N/A                                   4.33*lny + 2*x + 4                      %fix to handle more than 1 variable
closest pair                                  2T(n/2) + n                           128.85*n*ln n + 108.95*n - 53.31        %fix bug line 164 analyzer.py
Strassen              7T(n/2) + n^2           7T(n/2) + n^2           O(n^2.81)     954.2 * n^2.9 + 1
Nested Loop           N/A                     N/A                     O(n^2)        n^2 + 5*n + 4
Recursive Nested      T(n-1) + n              T(n-1) + n              O(n^2)        (3*m-3*i+6)*n+9*m-3*j-8*i+12            %n=m in our implementation
