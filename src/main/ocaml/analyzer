#!/usr/bin/env python
'''Recurrence complexity analyzer '''
import sys
from os import listdir

def read_logs(filename: str):
    ''' returns a list of integers that represent lengths ... '''
    with open(filename) as file:
        lines = [line.rstrip('\n') for line in file]
    file.close()
    return lines

def get_factors(lengths: list):
    ''' returns factors that each element of a list is decreased by'''
    factors = []
    for i, val in enumerate(lengths):
        if i == 0:
            continue
        factor = int(lengths[i-1])//int(val)
        factors.append(factor)
    print(str(factors))
    return factors

def calc_factors(dirname: str):
    ''' calc b '''
    # lengths = [line[1] for line in read_logs(sys.argv[1])]
    filenames = [f for f in listdir(dirname)]
    lengths = [read_logs(dirname + '/' + filename) for filename in filenames] # [[50,24,11], [5,2],...]
    all_factors = [f for sublist in lengths for f in get_factors(sublist)]
    return all_factors

dir_name = sys.argv[1]
factors = calc_factors(dir_name)
b = max(factors, key=factors.count)
print('b: ', b)
